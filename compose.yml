volumes:
  postgres-data:
services:
  postgres:
    image: postgres:16.2
    shm_size: "128mb"
    environment:
      - POSTGRES_PASSWORD=changeme
      - POSTGRESQL_MULTIPLE_DATABASES=chinook,keycloak
    ports:
      - "5432:5432"
    volumes:
      - "./docker-compose/postgres/initdb.d:/docker-entrypoint-initdb.d:Z"
      - postgres-data:/var/lib/postgresql/data
  keycloak:
    image: keycloak/keycloak:25.0.4
    command:
      - "start-dev"
      - "--hostname=oidc.127.0.0.1.nip.io"
      - "--http-enabled=true"
      - "--proxy-headers=xforwarded"
      - "--health-enabled=true"
      - "--metrics-enabled=true"
      - "--import-realm"
      - "--verbose"
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
    volumes:
      - "./docker-compose/keycloak/import/tlmt-realm.json:/opt/keycloak/data/import/tlmt-realm.json"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    profiles:
      - authn
  chinook:
    profiles:
      - app
    build:
      context: ./chinook
      dockerfile: ./Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "3000:3000"
    network_mode: host
  kroki:
    profiles:
      - doc
    image: yuzutech/kroki:0.25.0
    ports:
      - "8000:8000"
    depends_on:
      - mermaid
    environment:
      - KROKI_MERMAID_HOST=mermaid
      - KROKI_SAFE_MODE=UNSAFE
  mermaid:
    profiles:
      - doc
    image: yuzutech/kroki-mermaid:0.24.1
    expose:
      - "8002"
